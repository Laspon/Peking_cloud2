# CAS Server Context Configuration
#
# CAS Server Context Configuration
#
server.context-path=/cas
server.port=8443
#server.ssl.key-store=file:/etc/cas/thekeystore
#server.ssl.key-store-password=changeit
#server.ssl.key-password=changeit
# server.ssl.ciphers=
# server.ssl.client-auth=
#server.ssl.enabled=true
#server.ssl.key-alias=cas
# server.ssl.key-store-provider=
# server.ssl.key-store-type=
# server.ssl.protocol=
# server.ssl.trust-store=
# server.ssl.trust-store-password=
# server.ssl.trust-store-provider=
# server.ssl.trust-store-type=
server.max-http-header-size=2097152
server.use-forward-headers=true
server.connection-timeout=20000
server.error.include-stacktrace=ALWAYS
server.tomcat.max-http-post-size=2097152
server.tomcat.basedir=build/tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.suffix=.log
server.tomcat.max-threads=10
server.tomcat.port-header=X-Forwarded-Port
server.tomcat.protocol-header=X-Forwarded-Proto
server.tomcat.protocol-header-https-value=https
server.tomcat.remote-ip-header=X-FORWARDED-FOR
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false
# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true
endpoints.enabled=false
endpoints.sensitive=true
endpoints.restart.enabled=false
endpoints.shutdown.enabled=false
management.security.enabled=true
management.security.roles=ACTUATOR,ADMIN
management.security.sessions=if_required
management.context-path=/status
management.add-application-context-header=false
security.basic.authorize-mode=role
security.basic.enabled=false
security.basic.path=/status/**
##
# CAS Web Application Session Configuration
#
server.session.timeout=300000000
server.session.cookie.http-only=true
server.session.tracking-modes=COOKIE
##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
##
# CAS Log4j Configuration
#
#logging.config=file:/etc/cas/config/log4j2.xml
server.context-parameters.isLog4jAutoInitializationDisabled=true
##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true
##
# CAS Authentication Credentials
#
#当启用该配置时，为默认静态认证，登陆名为ideal密码为ideal
#cas.authn.accept.users=ideal::ideal

#注释掉上面一条配置，配置数据库认证方式，示例为query方式
#注意数据库字段与数据库名字默认时区分大小写的，CAS_USER不能查到该表
#cas.authn.jdbc.query[0].sql=select password from user where account=?
#cas.authn.jdbc.query[0].sql=select loginpass from userinfo where loginname||'@'||jsbh=? and state='R2'
cas.authn.jdbc.query[0].sql=select loginpass from userinfo where CONCAT(loginname,'@',jsbh)=? and state='R2'
cas.authn.jdbc.query[0].healthQuery=SELECT 1 
cas.authn.jdbc.query[0].isolateInternalQueries=false
cas.authn.jdbc.query[0].url=jdbc:mysql://192.168.4.103:3307/soa_manager?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&serverTimezone=GMT
#cas.authn.jdbc.query[0].url=jdbc:oracle:thin:@192.168.4.103:1521:awddb
cas.authn.jdbc.query[0].failFast=true
cas.authn.jdbc.query[0].isolationLevelName=ISOLATION_READ_COMMITTED
#cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.Oracle10gDialect
cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.MysqlDialect
cas.authn.jdbc.query[0].leakThreshold=10
cas.authn.jdbc.query[0].propagationBehaviorName=PROPAGATION_REQUIRED
cas.authn.jdbc.query[0].batchSize=1
#cas.authn.jdbc.query[0].user=soa_manager
cas.authn.jdbc.query[0].user=root
cas.authn.jdbc.query[0].ddlAuto=create-drop
cas.authn.jdbc.query[0].maxAgeDays=180
cas.authn.jdbc.query[0].password=root
#cas.authn.jdbc.query[0].password=dddd
cas.authn.jdbc.query[0].autocommit=false
cas.authn.jdbc.query[0].driverClass=com.mysql.jdbc.Driver
#cas.authn.jdbc.query[0].driverClass=oracle.jdbc.driver.OracleDriver
cas.authn.jdbc.query[0].idleTimeout=5000
#cas.authn.jdbc.query[0].credentialCriteria=
#cas.authn.jdbc.query[0].name=
#cas.authn.jdbc.query[0].order=0
#cas.authn.jdbc.query[0].dataSourceName=
#cas.authn.jdbc.query[0].dataSourceProxy=false

#此处很关键，必须要配置查询字段的名字，否则认证失败，官方文档中未找到说明，跟踪源代码找到的。
#cas.authn.jdbc.query[0].fieldPassword=password
cas.authn.jdbc.query[0].fieldPassword=loginpass

#cas.authn.jdbc.query[0].fieldExpired=
#cas.authn.jdbc.query[0].fieldDisabled=
#cas.authn.jdbc.query[0].principalAttributeList=sn,cn:commonName,givenName

#默认为NONE密码明文认证，可以自定义加密算法类(implements PasswordEncoder)
#cas.authn.jdbc.query[0].passwordEncoder.type=NONE|DEFAULT|STANDARD|BCRYPT|SCRYPT|PBKDF2|com.example.CustomPasswordEncoder
#cas.authn.jdbc.query[0].passwordEncoder.characterEncoding=
#当passwordEncoder.type为default时，算法可定义MD5等算法。
#cas.authn.jdbc.query[0].passwordEncoder.encodingAlgorithm=
#cas.authn.jdbc.query[0].passwordEncoder.secret=
#cas.authn.jdbc.query[0].passwordEncoder.strength=16
#cas.authn.jdbc.query[0].principalTransformation.suffix=
#cas.authn.jdbc.query[0].principalTransformation.caseConversion=NONE|UPPERCASE|LOWERCASE
#cas.authn.jdbc.query[0].principalTransformation.prefix=

#多属性返回(同样是各种试验，同事解决的哈)
cas.authn.attributeRepository.jdbc[0].singleRow=true
cas.authn.attributeRepository.jdbc[0].order=0
cas.authn.attributeRepository.jdbc[0].url=jdbc:mysql://192.168.4.103:3307/soa_manager?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&serverTimezone=GMT
#cas.authn.attributeRepository.jdbc[0].url=jdbc:oracle:thin:@192.168.4.103:1521:awddb
cas.authn.attributeRepository.jdbc[0].failFast=true
#cas.authn.attributeRepository.jdbc[0].username=soa_manager
#cas.authn.attributeRepository.jdbc[0].user=soa_manager
#cas.authn.attributeRepository.jdbc[0].password=dddd
cas.authn.attributeRepository.jdbc[0].user=root
cas.authn.attributeRepository.jdbc[0].password=root
#cas.authn.attributeRepository.jdbc[0].sql=select * from userinfo where loginname||'@'||jsbh=? and state='R2'
cas.authn.attributeRepository.jdbc[0].sql=select * from userinfo where CONCAT(loginname,'@',jsbh)=? and state='R2'CONCAT(loginname,'@',jsbh)
#取消以下两行则在返回属性中仅包含表中的这两个字段属性，注释情况下返回该表行所有属性
cas.authn.attributeRepository.jdbc[0].attributes.usertype=usertype
cas.authn.attributeRepository.jdbc[0].attributes.jsbh=jsbh
cas.authn.attributeRepository.jdbc[0].attributes.loginname=loginname
cas.authn.attributeRepository.jdbc[0].attributes.sfzh=sfzh
cas.authn.attributeRepository.jdbc[0].attributes.jh=jh
cas.authn.attributeRepository.jdbc[0].attributes.email=email
cas.authn.attributeRepository.jdbc[0].attributes.realname=realname
cas.authn.attributeRepository.jdbc[0].attributes.glybz=glybz


#cas.authn.attributeRepository.jdbc[0].dialect=org.hibernate.dialect.Oracle10gDialect
#cas.authn.attributeRepository.jdbc[0].ddlAuto=none
#cas.authn.attributeRepository.jdbc[0].driverClass=oracle.jdbc.driver.OracleDriver
#cas.authn.attributeRepository.jdbc[0].leakThreshold=10
#cas.authn.attributeRepository.jdbc[0].propagationBehaviorName=PROPAGATION_REQUIRED
#cas.authn.attributeRepository.jdbc[0].batchSize=1
#cas.authn.attributeRepository.jdbc[0].healthQuery=SELECT 1 from dual
#cas.authn.attributeRepository.jdbc[0].failFast=true

cas.authn.attributeRepository.jdbc[0].dialect=org.hibernate.dialect.MysqlDialect
cas.authn.attributeRepository.jdbc[0].ddlAuto=none
cas.authn.attributeRepository.jdbc[0].driverClass=com.mysql.jdbc.Driver
cas.authn.attributeRepository.jdbc[0].leakThreshold=10
cas.authn.attributeRepository.jdbc[0].propagationBehaviorName=PROPAGATION_REQUIRED
cas.authn.attributeRepository.jdbc[0].batchSize=1
cas.authn.attributeRepository.jdbc[0].healthQuery=SELECT 1 
cas.authn.attributeRepository.jdbc[0].failFast=true

cas.host.name =cas.mis.awd.com
cas.jdbc.showSql = true
#从json 配置中读取服务
cas.serviceRegistry.initFromJson=true
#注销后可返回
cas.logout.followServiceRedirects=true

cas.warningCookie.path=
cas.warningCookie.maxAge=-1
cas.warningCookie.domain=
cas.warningCookie.name=CASPRIVACY
cas.warningCookie.secure=true
cas.warningCookie.httpOnly=true

cas.tgc.path=
cas.tgc.maxAge=-1
cas.tgc.domain=
cas.tgc.name=TGC
cas.tgc.secure=false
cas.tgc.httpOnly=true
cas.tgc.rememberMeMaxAge=1209600

cas.tgc.encryptionKey=
cas.tgc.signingKey=
cas.tgc.cipherEnabled=true